{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/grzqc/master/assets/schema_input.json",
    "title": "BfArM-MVH/GRZ_QC_Workflow pipeline - params.input schema",
    "description": "Schema for the file provided with params.input",
    "type": "array",
    "uniqueEntries": ["sample", "runId"],
    "items": {
        "type": "object",
        "properties": {
            "sample": {
                "type": "string",
                "pattern": "^\\S+$",
                "errorMessage": "Sample name must be provided and cannot contain spaces",
                "meta": ["sample"]
            },
            "runId": {
                "type": "string",
                "pattern": "^\\S+$",
                "errorMessage": "Run ID must be provided, be unique within a sample, and cannot contain spaces",
                "meta": ["runId"]
            },
            "donorPseudonym": {
                "type": "string",
                "meta": ["donorPseudonym"]
            },
            "labDataName": {
                "type": "string",
                "meta": ["labDataName"]
            },
            "laneId": {
                "type": "string",
                "pattern": "^\\S+$",
                "meta": ["laneId"]
            },
            "flowcellId": {
                "type": "string",
                "meta": ["flowcellId"]
            },
            "libraryType": {
                "type": "string",
                "pattern": "panel|wgs|wes|panel_lr|wgs_lr|wes_lr",
                "errorMessage": "Library type must be one of the following: panel, wgs, wes, panel_lr, wgs_lr, wes_lr",
                "meta": ["libraryType"]
            },
            "sequenceSubtype": {
                "type": "string",
                "pattern": "somatic|germline",
                "errorMessage": "Sequence subtype must be either somatic or germline",
                "meta": ["sequenceSubtype"]
            },
            "genomicStudySubtype": {
                "type": "string",
                "pattern": "tumor\\+germline|tumor-only|germline-only",
                "errorMessage": "Genomic study subtype must be either tumor+germline, tumor-only, or germline-only",
                "meta": ["genomicStudySubtype"]
            },
            "sequencerManufacturer": {
                "type": "string",
                "errorMessage": "Sequencer manufacturer",
                "meta": ["sequencer"]
            },
            "reads_long": {
                "type": "string",
                "format": "file-path",
                "exists": true,
                "pattern": "^\\S+\\.(bam|fastq.gz|fq.gz)$",
                "errorMessage": "Long read files must be in BAM or GZIPed FASTQ format and cannot contain spaces."
            },
            "reads1": {
                "type": "string",
                "format": "file-path",
                "exists": true,
                "pattern": "^\\S+\\.f(ast)?q\\.gz$",
                "errorMessage": "Path to first short reads file (_R1 in a pair) must be provided and cannot contain spaces"
            },
            "reads2": {
                "type": "string",
                "format": "file-path",
                "exists": true,
                "pattern": "^\\S+\\.f(ast)?q\\.gz$",
                "errorMessage": "Path to paired short reads file (_R2) cannot contain spaces"
            },
            "aligned_reads": {
                "type": "string",
                "format": "file-path",
                "exists": true,
                "pattern": "\\S+\\.(bam|cram)$",
                "errorMessage": "Aligned reads BAM or CRAM, cannot contain spaces and must have extension '.bam' or '.cram'"
            },
            "fastp_json": {
                "type": "string",
                "format": "file-path",
                "exists": true,
                "pattern": "\\S+\\.(json)$",
                "errorMessage": "fastp JSON report from reads in alignment",
                "meta": ["fastp_json"]
            },
            "bed_file": {
                "type": "string",
                "format": "file-path",
                "exists": true,
                "pattern": "^\\S+\\.bed(\\.gz)?$",
                "errorMessage": "Target bed file",
                "meta": ["bed_file"]
            },
            "reference": {
                "type": "string",
                "pattern": "GRCh38|GRCh37",
                "errorMessage": "The reference genome has to be either GRCh37 or GRCh38",
                "meta": ["reference"]
            },
            "meanDepthOfCoverage": {
                "type": "number",
                "minimum": 0,
                "errorMessage": "Must be a positive number.",
                "meta": ["meanDepthOfCoverage"]
            },
            "targetedRegionsAboveMinCoverage": {
                "type": "number",
                "minimum": 0,
                "maximum": 1,
                "errorMessage": "Must be a number between 0 and 1.",
                "meta": ["targetedRegionsAboveMinCoverage"]
            },
            "percentBasesAboveQualityThreshold": {
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "errorMessage": "Must be a number between 0 and 100.",
                "meta": ["percentBasesAboveQualityThreshold"]
            }
        },
        "oneOf": [
            {
                "required": ["reads1"],
                "not": {
                    "required": ["aligned_reads", "reads_long"]
                }
            },
            { "required": ["aligned_reads"], "not": { "required": ["reads1", "reads_long"] } },
            { "required": ["reads_long"], "not": { "required": ["aligned_reads", "reads1"] } }
        ],
        "dependentRequired": {
            "reads1": ["runId"],
            "reads_long": ["runId"],
            "reads2": ["reads1"],
            "fastp_json": ["aligned_reads"]
        },
        "required": ["sample", "libraryType", "sequenceSubtype", "genomicStudySubtype"]
    }
}
