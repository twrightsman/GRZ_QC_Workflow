{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/grzqc/master/nextflow_schema.json",
    "title": "BfArM-MVH/GRZ_QC_Workflow pipeline parameters",
    "description": "Quality Control pipeline for the data that will be submitted to the GRZ: Map and calculate coverage",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "anyOf": [
                {
                    "required": ["submission_basepath"]
                },
                {
                    "required": ["input"]
                }
            ],
            "required": ["outdir"],
            "properties": {
                "submission_basepath": {
                    "type": "string",
                    "format": "directory-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "description": "submission basepath",
                    "fa_icon": "fas fa-book",
                    "help_text": "contains subfolder of files and metadata, e.g https://www.cmm.in.tum.de/public/grz-example-submissions/Panel/ "
                },
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/grzqc/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "genome": {
                    "type": "string",
                    "description": "Name of genome reference.",
                    "default": "GRCh38",
                    "fa_icon": "fas fa-book",
                    "help_text": "GRCh38 or GRCh37: User have to define genome",
                    "enum": ["GRCh38", "GRCh37"]
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "save_reference": {
                    "type": "boolean",
                    "description": "If true saves fasta, fai and bwa indexes to reference directory",
                    "default": false,
                    "fa_icon": "fas fa-folder-open"
                },
                "save_reference_path": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Path to save fasta, fai and bwa indexes. require save_reference is true",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "reference_path": {
                    "type": "string",
                    "format": "directory-path",
                    "fa_icon": "fas fa-copy",
                    "description": "Path to reference.",
                    "help_text": "A directory including both GRCh38 and GRCh37 references. If provided, it will use the refernce genome fasta, fai and BWA mem indices for the corresponding genome version."
                },
                "bwa": {
                    "type": "string",
                    "fa_icon": "fas fa-copy",
                    "description": "Path to BWA mem indices.",
                    "help_text": "If none provided, will be generated automatically from the FASTA reference."
                },
                "mmi": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "description": "Path to a minimap2 index for the specified genome.",
                    "fa_icon": "far fa-file-code"
                },
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* automatically",
                    "fa_icon": "far fa-file-code"
                },
                "fai": {
                    "type": "string",
                    "fa_icon": "fas fa-file",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "help_text": "> **NB** If none provided, will be generated automatically from the FASTA reference.",
                    "description": "Path to FASTA reference index."
                },
                "target": {
                    "type": "string",
                    "description": "Path to the target bed file of ~ 400 representative target genes.",
                    "fa_icon": "fas fa-book",
                    "help_text": "Path to the target bed file of ~ 400 representative target genes."
                },
                "mapping_chrom": {
                    "type": "string",
                    "description": "Path to map of chromosome names to rename panel BED to match reference genome.",
                    "fa_icon": "fas fa-file",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
